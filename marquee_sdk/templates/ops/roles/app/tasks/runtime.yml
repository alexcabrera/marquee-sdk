---
- name: install required runtime packages from apt
  apt: pkg={% raw %}{{ item }}{% endraw %} state=latest
  with_items:
    - libxml2-dev
    - libxslt1-dev

- name: copy runtime environment config
  template: src=env.j2 dest=/srv/{{ project_name }}/.env

- name: add nginx configuration for runtime
  template: src=nginx.site.j2 dest=/etc/nginx/sites-available/{{ project_name }}
  notify:
    - restart nginx

- name: enable nginx configuration for runtime
  file: src=/etc/nginx/sites-available/{{ project_name }}
        dest=/etc/nginx/sites-enabled/{{ project_name }}
        state=link 
  notify:
    - restart nginx

- name: install runtime python requirements
  pip:  name={% raw %}{{ item.name }}{% endraw %}
        version={% raw %}{{ item.version }}{% endraw %}
        state=present
        virtualenv=/srv/virtualenvs/{{ project_name }}
  with_items:
    - { name: 'git+https://github.com/marquee/content.git#egg=content', version: '0.1.2'}
    - { name: 'Flask',              version: '0.10.1'}
    - { name: 'Flask-Cache',        version: '0.13.1'}
    - { name: 'Flask-Classy',       version: '0.6.7'}
    - { name: 'Flask-Script',       version: '0.6.6'}
    - { name: 'pyes',               version: '0.90.1'}
    - { name: 'Flask-WTF',          version: '0.9.3'}
    - { name: 'redis',              version: '2.8.0'}
    - { name: 'gunicorn',           version: '18.0'}
    - { name: 'marketo',            version: '0.1.0'}
    - { name: 'python-memcached',   version: '1.53'}
    - { name: 'sendgrid',           version: '0.5.1'}
    - { name: 'raven',              version: '3.6.1'}
    - { name: 'blinker',            version: '1.3'}
    - { name: 'lxml',               version: '3.3.3'}
    - { name: 'feedgen',            version: '0.2.8'}
    - { name: 'keen',               version: '0.2.3'}
    - { name: 'boto',               version: '2.28.0'}

- name: add supervisor configuration for runtime
  template: src=supervisor-app.conf.j2 dest=/etc/supervisor/conf.d/{{ project_name }}.conf
  notify:
    - restart supervisor

- name: install grunt
  npm: name=grunt-cli global=yes state=latest

- name: install compass
  command: gem install compass --pre

- name: install runtime node requirements
  npm:  name={% raw %}{{ item.name }}{% endraw %}
        version={% raw %}{{ item.version }}{% endraw %}
        state=present
        path=/srv/{{ project_name }}
  with_items:
    - { name: 'formwork',               version: 'https://github.com/marquee/formwork/tarball/v0.3.5'}
    - { name: 'shiny',                  version: 'https://github.com/alecperkins/sass-shiny/tarball/v0.9.0'}
    - { name: 'underscore',             version: '~1.6.0'}
    - { name: 'backbone',               version: '~1.1.2'}
    - { name: 'jquery',                 version: '~2.1.0'}
    - { name: 'URIjs',                  version: '~1.12.0'}
    - { name: 'cookie-component',       version: '~0.1.5' }
    - { name: 'browserify',             version: '~2.35.1'}
    - { name: 'coffee-script',          version: '~1.6.x'}
    - { name: 'coffeeify',              version: '~0.5.2'}
    - { name: 'grunt-browserify',       version: '~1.2.11'}
    - { name: 'grunt-contrib-compass',  version: '~0.6.0'}
    - { name: 'grunt-contrib-uglify',   version: '~0.2.5'}
    - { name: 'grunt-concurrent',       version: '~0.4.1'}
    - { name: 'grunt-contrib-watch',    version: '~0.5.3'}
    - { name: 'grunt-contrib-cssmin',   version: '~0.7.0'}
    - { name: 'grunt-env',              version: '~0.4.1'}
    - { name: 'grunt-shell',            version: '~0.6.1'}
    - { name: 'grunt-contrib-copy',     version: '~0.5.0'}
    - { name: 'viewport-units-buggyfill', version: '~0.3.1'}

- name: build static files
  command: grunt build:production chdir=/srv/{{ project_name }}

- name: add rebuild_index to cron
  cron: name="rebuild index"
        minute=0 hour=0/2 day=* month=* weekday=*
        job="/srv/virtualenvs/{{ project_name }}/bin/python /srv/{{project_name}}/manage.py rebuild_index"
        state=present
      
- name: make sure supervisor is running
  service: name=supervisor state=started

- name: make sure nginx is running
  service: name=nginx state=started

- name: restart runtime
  supervisorctl: name=runtime state=restarted
  notify:
    - start redis
    - sync content
    - rebuild index
