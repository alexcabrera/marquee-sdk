# -*- coding: utf-8 -*-
#!/usr/bin/env python 
from    marquee_sdk.utils   import copy_template
from    marquee_sdk.config  import TEMPLATE_DIR

import  click
import  fnmatch
import  jinja2
import  os
import  re
import  socket
import  textwrap

@click.group()
def marquee():
    pass

@marquee.command()
@click.argument('project_name')
def startproject(project_name):
    '''Initialize a new Marquee Runtime project'''
    click.echo("Let's start a new Marquee Runtime")

    PROJECT_PATH    = os.path.join(os.getcwd(), project_name)
    private_ip      = click.prompt('Assign a Private IP address to this project (10.0.1.x)')

    # Create new directory for project
    if not os.path.exists(PROJECT_PATH):
        os.makedirs(PROJECT_PATH)
    else:
        click.echo('{0} already exists. Exiting.'.format(PROJECT_PATH))
        quit()

    # Sanitize IP input
    try:
        socket.inet_aton(private_ip)
    except socket.error:
        click.echo('{0} is not a valid IP address. Exiting.'.format(private_ip))
        quit()

    # Copy project structure
    for root, dirs, files in os.walk(TEMPLATE_DIR):
        pattern = re.compile('^.+\/templates\/(.+)$')
        try:
            relative_path = pattern.findall(root)[0]
        except IndexError:
            relative_path = '.'
        for d in dirs:
            os.makedirs(os.path.join(PROJECT_PATH, relative_path, d))
        for f in files:
            click.echo(os.path.join(TEMPLATE_DIR, relative_path, f))
            copy_template(
                src          = os.path.join(relative_path, f),
                dest         = os.path.join(PROJECT_PATH, relative_path, f),
                project_name = project_name,
                private_ip   = private_ip,
            )

        click.echo(root)
        click.echo(dirs)
        click.echo(files)
        click.echo('---')

    # Copy project files
        

    # Build project files by running templates through jinja
    #copy_template('_Vagrantfile', os.path.join(PROJECT_PATH, 'Vagrantfile'),
    #    project_name    = project_name,
    #    private_ip      = private_ip,
    #)

    exit_message = textwrap.dedent("""
    ################################
    ## Marquee Runtime Generated! ##
    ################################

    Just a few things left to do:

    First, make sure you have an entry for this project in `/etc/hosts`.

        {private_ip}    {project_name}.local

    Running the following command should do it for you:

        $ sudo echo "{private_ip}\t{project_name}.local" >> /etc/hosts

    This file is owned by the system, so you will need to enter your administrator password.

    Next, change into the project directory and bring up our development environment.

        $ cd {project_name}
        $ vagrant up

    """.format(**locals()))

    click.echo(exit_message)
   
# Make this whole thing run
if __name__ == '__main__':
    marquee()
